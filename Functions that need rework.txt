_ImGui_EnableDocking(enable = True)
	Local io = _ImGui_GetIO()
	io.ConfigFlags = enable ? BitOR(io.ConfigFlags, ImGuiConfigFlags_DockingEnable) : BitXOR(io.ConfigFlags, ImGuiConfigFlags_DockingEnable)
}

Func _ImGui_GetIO()

	local $result = DllCall($IMGUI_DLL, "ptr:cdecl", "GetIO")
	If @error Then Return SetError(1, 0, 0)

	Local $struct = DllStructCreate($__tagImGuiIO, $result[0])
	return $struct
EndFunc

Func _ImGui_GetStyle()

	local $result = DllCall($IMGUI_DLL, "ptr:cdecl", "GetStyle")
	If @error Then Return SetError(1, 0, 0)

	Local $struct = DllStructCreate($__tagImGuiStyle, $result[0])
	return $struct
EndFunc

; // Windows
Func _ImGui_Begin($title, $close_btn = False, $flags = $ImGuiWindowFlags_None)
	Local $close_ptr = 0

	If $close_btn Then
		Local $b_close = DllStructCreate("boolean value;")
		$b_close.value = True
		$close_ptr = DllStructGetPtr($b_close)
	EndIf

	Local $result = DllCall($IMGUI_DLL, "none:cdecl", "Begin", "wstr", $title, "ptr", $close_ptr, "int", $flags)
	If @error Then Return SetError(1, 0, 0)

	If $close_btn = False Then Return True
	Return $b_close.value
EndFunc

Func _ImGui_GetWindowViewport()
	Local $result = DllCall($IMGUI_DLL, "ptr:cdecl", "GetWindowViewport")
	If @error Then Return False
	Local $struct = DllStructCreate($__tagImGuiViewport, $result[0])
	return $struct
EndFunc

Func ___ImGui_RecvImVec2($return_type, $func_name)

	Local $struct_x = DllStructCreate("float value;")
	Local $struct_y = DllStructCreate("float value;")
	Local $result = DllCall($IMGUI_DLL, $return_type, $func_name, "ptr", DllStructGetPtr($struct_x), "ptr", DllStructGetPtr($struct_y))

	If @error Then Return SetError(1, 0, 0)
	Local $ret[2] = [$struct_x.value, $struct_y.value]
	Return $ret

EndFunc

Func _ImGui_GetMouseDragDelta($button = $ImGuiMouseButton_Left, $lock_threshold = -1)
	Local $struct_x = DllStructCreate("float value;")
	Local $struct_y = DllStructCreate("float value;")
	Local $result = DllCall($IMGUI_DLL, "none:cdecl", "GetMouseDragDelta", "int", $button, "float", $lock_threshold, "ptr", DllStructGetPtr($struct_x),"ptr", DllStructGetPtr($struct_y))
	If @error Then Return SetError(1, 0, 0)
	Local $ret[2] = [$struct_x.value, $struct_y.value]
	Return $ret
EndFunc

Func _ImGui_CheckBox($text, ByRef $active)
	Local $b_active = DllStructCreate("boolean value;")
	$b_active.value = $active

	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "Checkbox", "wstr", $text, "ptr", DllStructGetPtr($b_active))
	If @error Then Return SetError(1, 0, 0)
	$active = $b_active.value
	Return $result[0]
EndFunc

Func _ImGui_CheckboxFlags($label, ByRef $flags, $flags_value)
	Local $struct_flags = DllStructCreate('uint value;')
	$struct_flags.value = $flags
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "CheckboxFlags", "wstr", $label, "ptr", DllStructGetPtr($struct_flags), "uint", $flags_value)
	$flags = $struct_flags.value
	If @error Then Return SetError(1, 0, 0)
	Return $result[0]
EndFunc
Func _ImGui_RadioButton($label, ByRef $v, $v_button)
	Local $struct_v = DllStructCreate('int value;')
	$struct_v.value = $v
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "RadioButton", "wstr", $label, "ptr", DllStructGetPtr($struct_v), "int", $v_button)
	$v = $struct_v.value
	If @error Then Return SetError(1, 0, 0)
	Return $result[0]
EndFunc

Func _ImGui_DragFloat($label, ByRef $v, $v_speed = 1, $v_min = 0, $v_max = 0, $format = "%3.f", $power = 1)
	Local $struct_v = DllStructCreate('float value;')
	$struct_v.value = $v
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "DragFloat", "wstr", $label, "ptr", DllStructGetPtr($struct_v), "float", $v_speed, "float", $v_min, "float", $v_max, "wstr", $format, "float", $power)
	ToolTip($v & " - " & $struct_v.value)
	$v = $struct_v.value
	If @error Then Return SetError(1, 0, 0)
	Return $result[0]
EndFunc

Func ___ImGui_DragFloatN($n, $label, ByRef $v, $v_speed, $v_min, $v_max, $format, $power)
	If $n < 2 Or $n > 4 Or UBound($v) < $n Then Return SetError(1, 0, 0)

	Local $struct_value = DllStructCreate("float[" & $n & "]")
	For $i = 0 To $n-1
		DllStructSetData($struct_value, 1, $v[$i], $i + 1)
	Next
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "DragFloatN", _
		"int", $n, _
		"wstr", $label, _
		"ptr", DllStructGetPtr($struct_value), _
		"float", $v_speed, _
		"float", $v_min, _
		"float", $v_max, _
		"wstr", $format, _
		"float", $power _
	)

	If @error Then Return False

	For $i = 0 To $n-1
		$v[$i] = DllStructGetData($struct_value, 1, $i + 1)
	Next
	Return $result[0]
EndFunc

Func _ImGui_DragFloatRange2($label, ByRef $v_current_min, ByRef $v_current_max, $v_speed = 1, $v_min = 0, $v_max = 0, $format = "%.3f", $format_max = "", $power = 1)

	Local $struct_v_current_min = DllStructCreate('float value;')
	$struct_v_current_min.value = $v_current_min

	Local $struct_v_current_max = DllStructCreate('float value;')
	$struct_v_current_max.value = $v_current_max

	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "DragFloatRange2", "wstr", $label, "ptr", DllStructGetPtr($struct_v_current_min), "ptr", DllStructGetPtr($struct_v_current_max), "float", $v_speed, "float", $v_min, "float", $v_max, "wstr", $format, "wstr", $format_max, "float", $power)
	If @error Then Return False

	$v_current_min = $struct_v_current_min.value
	$v_current_max = $struct_v_current_max.value

	Return $result[0]
EndFunc

Func _ImGui_DragInt($label, ByRef $v, $v_speed = 1, $v_min = 0, $v_max = 0, $format = "%d")
	Local $struct_v = DllStructCreate('int value;')
	$struct_v.value = $v
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "DragInt", "wstr", $label, "ptr", DllStructGetPtr($struct_v), "float", $v_speed, "int", $v_min, "int", $v_max, "wstr", $format)
	If @error Then Return SetError(1, 0, 0)
	$v = $struct_v.value
	Return $result[0]
EndFunc

Func ___ImGui_DragIntN($n, $label, ByRef $v, $v_speed, $v_min, $v_max, $format)
	If $n < 2 Or $n > 4 Or UBound($v) < $n Then Return SetError(1, 0, 0)

	Local $struct_value = DllStructCreate("int[" & $n & "]")
	For $i = 0 To $n-1
		DllStructSetData($struct_value, 1, $v[$i], $i + 1)
	Next
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "DragIntN", _
		"int", $n, _
		"wstr", $label, _
		"ptr", DllStructGetPtr($struct_value), _
		"float", $v_speed, _
		"int", $v_min, _
		"int", $v_max, _
		"wstr", $format _
	)

	If @error Then Return False

	For $i = 0 To $n-1
		$v[$i] = DllStructGetData($struct_value, 1, $i + 1)
	Next

	Return $result[0]
EndFunc

Func _ImGui_DragIntRange2($label, ByRef $v_current_min, ByRef $v_current_max, $v_speed = 1, $v_min = 0, $v_max = 0, $format = "%.3f", $format_max = "")
	Local $struct_v_current_min = DllStructCreate('int value;')
	$struct_v_current_min.value = $v_current_min
	Local $struct_v_current_max = DllStructCreate('int value;')
	$struct_v_current_max.value = $v_current_max
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "DragIntRange2", "wstr", $label, "ptr", DllStructGetPtr($struct_v_current_min), "ptr", DllStructGetPtr($struct_v_current_max), "float", $v_speed, "int", $v_min, "int", $v_max, "wstr", $format, "wstr", $format_max)
	If @error Then Return False
	$v_current_min = $struct_v_current_min.value
	$v_current_max = $struct_v_current_max.value
	Return $result[0]
EndFunc

Func _ImGui_SliderFloat($text, ByRef $value, $v_min, $v_max, $format = "%.3f", $power = 1)

	Local $struct = DllStructCreate("float value;")
	$struct.value = $value
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "SliderFloat", "wstr", $text, "ptr", DllStructGetPtr($struct), "float", $v_min, "float", $v_max, "wstr", $format, "float", $power)
	If @error Then Return SetError(1, 0, 0)
	$value = $struct.value
	Return $result[0]
EndFunc

Func ___ImGui_SliderFloatN($n, $label, ByRef $v, $v_min, $v_max, $format, $power)
	If $n < 2 Or $n > 4 Or UBound($v) < $n Then Return SetError(1, 0, 0)

	Local $struct_value = DllStructCreate("float[" & $n & "]")
	For $i = 0 To $n-1
		DllStructSetData($struct_value, 1, $v[$i], $i + 1)
	Next
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "SliderFloatN", _
		"int", $n, _
		"wstr", $label, _
		"ptr", DllStructGetPtr($struct_value), _
		"float", $v_min, _
		"float", $v_max, _
		"wstr", $format, _
		"float", $power _
	)

	If @error Then Return False

	For $i = 0 To $n-1
		$v[$i] = DllStructGetData($struct_value, 1, $i + 1)
	Next

	Return $result[0]
EndFunc


Func _ImGui_SliderInt($label, ByRef $v, $v_min, $v_max, $format = "%d")

	Local $struct = DllStructCreate("int value;")
	$struct.value = $v
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "SliderInt", "wstr", $label, "ptr", DllStructGetPtr($struct), "int", $v_min, "int", $v_max, "wstr", $format)
	If @error Then Return SetError(1, 0, 0)
	$v = $struct.value
	Return $result[0]

EndFunc

Func ___ImGui_SliderIntN($n, $label, ByRef $v, $v_min, $v_max, $format)
	If $n < 2 Or $n > 4 Or UBound($v) < $n Then Return SetError(1, 0, 0)

	Local $struct_value = DllStructCreate("int[" & $n & "]")
	For $i = 0 To $n-1
		DllStructSetData($struct_value, 1, $v[$i], $i + 1)
	Next
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "SliderIntN", _
		"int", $n, _
		"wstr", $label, _
		"ptr", DllStructGetPtr($struct_value), _
		"int", $v_min, _
		"int", $v_max, _
		"wstr", $format _
	)

	If @error Then Return False

	For $i = 0 To $n-1
		$v[$i] = DllStructGetData($struct_value, 1, $i + 1)
	Next

	Return $result[0]
EndFunc

Func _ImGui_SliderAngle($label, ByRef $v_rad, $v_degrees_min = -360, $v_degrees_max = 360, $format = "%.0f deg")
	Local $struct_v_rad = DllStructCreate('float value;')
	$struct_v_rad.value = $v_rad
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "SliderAngle", "wstr", $label, "ptr", DllStructGetPtr($struct_v_rad), "float", $v_degrees_min, "float", $v_degrees_max, "wstr", $format)
	If @error Then Return SetError(1, 0, 0)
	$v_rad = $struct_v_rad.value
	Return $result[0]
EndFunc
Func _ImGui_VSliderFloat($label, $size_x, $size_y, ByRef $v, $v_min, $v_max, $format = "%.3f", $power = 1)
	Local $struct_v = DllStructCreate('float value;')
	$struct_v.value = $v
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "VSliderFloat", "wstr", $label, "float", $size_x, "float", $size_y, "ptr", DllStructGetPtr($struct_v), "float", $v_min, "float", $v_max, "wstr", $format, "float", $power)
	If @error Then Return SetError(1, 0, 0)
	$v = $struct_v.value
	Return $result[0]
EndFunc
Func _ImGui_VSliderInt($label, $size_x, $size_y, ByRef $v, $v_min, $v_max, $format = "%d")
	Local $struct_v = DllStructCreate('int value;')
	$struct_v.value = $v
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "VSliderInt", "wstr", $label, "float", $size_x, "float", $size_y, "ptr", DllStructGetPtr($struct_v), "int", $v_min, "int", $v_max, "wstr", $format)
	If @error Then Return SetError(1, 0, 0)
	$v = $struct_v.value
	Return $result[0]
EndFunc

Func _ImGui_InputText($label, ByRef $buf, $flags = $ImGuiInputTextFlags_None, $buf_size = 128000, $call_back = 0)


	Local $struct_buf = DllStructCreate('wchar value[' & $buf_size & '];')
	$struct_buf.value = $buf

	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "InputText", "wstr", $label, "ptr", DllStructGetPtr($struct_buf), "int", $buf_size, "int", $flags, "ptr", $call_back, "ptr", 0)
	If @error Then Return SetError(1, 0, 0)

	$buf = $struct_buf.value
	Return $result[0]
EndFunc

Func _ImGui_InputTextMultiline($label, ByRef $buf, $size_x = 0, $size_y = 0, $flags = $ImGuiInputTextFlags_None, $buf_size = 128000)

	Local $struct_buf = DllStructCreate('wchar value[' & $buf_size & '];')
	$struct_buf.value = $buf

	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "InputTextMultiline", "wstr", $label, "ptr", DllStructGetPtr($struct_buf), "int", $buf_size, "float", $size_x, "float", $size_y, "int", $flags, "ptr", 0, "ptr", 0)

	If @error Then Return SetError(1, 0, 0)

	$buf = $struct_buf.value
	Return $result[0]
EndFunc

Func _ImGui_InputTextWithHint($label, $hint, ByRef $buf, $flags = $ImGuiInputTextFlags_None, $buf_size = 128000)

	Local $struct_buf = DllStructCreate('wchar value[' & $buf_size & '];')
	$struct_buf.value = $buf

	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "InputTextWithHint", "wstr", $label, "wstr", $hint, "ptr", DllStructGetPtr($struct_buf), "int", $buf_size, "int", $flags)
	If @error Then Return SetError(1, 0, 0)
	$buf = $struct_buf.value
	Return $result[0]
EndFunc

Func _ImGui_InputFloat($label, ByRef $v, $step = 0, $step_fast = 0, $format = "%.3f", $flags = $ImGuiInputTextFlags_None)
	Local $struct_v = DllStructCreate('float value;')
	$struct_v.value = $v
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "InputFloat", "wstr", $label, "ptr", DllStructGetPtr($struct_v), "float", $step, "float", $step_fast, "wstr", $format, "int", $flags)
	If @error Then Return SetError(1, 0, 0)
	$v = $struct_v.value
	Return $result[0]
EndFunc

Func ___ImGui_InputFloatN($n, $label, ByRef $v, $format, $flags)
	If $n < 2 Or $n > 4 Or UBound($v) < $n Then Return SetError(1, 0, 0)

	Local $struct_value = DllStructCreate("float[" & $n & "]")
	For $i = 0 To $n-1
		DllStructSetData($struct_value, 1, $v[$i], $i + 1)
	Next
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "InputFloatN", _
		"int", $n, _
		"wstr", $label, _
		"ptr", DllStructGetPtr($struct_value), _
		"wstr", $format, _
		"int", $flags _
	)

	If @error Then Return False
	For $i = 0 To $n-1
		$v[$i] = DllStructGetData($struct_value, 1, $i + 1)
	Next
	Return $result[0]
EndFunc

Func _ImGui_InputInt($label, ByRef $v, $step = 1, $step_fast = 100, $flags = $ImGuiInputTextFlags_None)
	Local $struct_v = DllStructCreate('int value;')
	$struct_v.value = $v
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "InputInt", "wstr", $label, "ptr", DllStructGetPtr($struct_v), "int", $step, "int", $step_fast, "int", $flags)
	If @error Then Return SetError(1, 0, 0)
	$v = $struct_v.value
	Return $result[0]
EndFunc

Func ___ImGui_InputIntN($n, $label, ByRef $v, $flags)
	If $n < 2 Or $n > 4 Or UBound($v) < $n Then Return SetError(1, 0, 0)

	Local $struct_value = DllStructCreate("int[" & $n & "]")
	For $i = 0 To $n-1
		DllStructSetData($struct_value, 1, $v[$i], $i + 1)
	Next
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "InputIntN", _
		"int", $n, _
		"wstr", $label, _
		"ptr", DllStructGetPtr($struct_value), _
		"int", $flags _
	)
	If @error Then Return False
	For $i = 0 To $n-1
		$v[$i] = DllStructGetData($struct_value, 1, $i + 1)
	Next
	Return $result[0]
EndFunc

Func _ImGui_InputDouble($label, ByRef $v, $step = 0, $step_fast = 0, $format = "%.6f", $flags = $ImGuiInputTextFlags_None)
	Local $struct_v = DllStructCreate('double value;')
	$struct_v.value = $v
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "InputDouble", "wstr", $label, "ptr", DllStructGetPtr($struct_v), "double", $step, "double", $step_fast, "wstr", $format, "int", $flags)
	If @error Then Return SetError(1, 0, 0)
	$v = $struct_v.value
	Return $result[0]
EndFunc
Func _ImGui_ColorEdit($label, ByRef $color, $flags = $ImGuiColorEditFlags_None)
	Local $struct_v = DllStructCreate('uint value;')
	$struct_v.value = $color
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "ColorEdit", "wstr", $label, "ptr", DllStructGetPtr($struct_v), "int", $flags)
	If @error Then Return SetError(1, 0, 0)
	$color = $struct_v.value
	Return $result[0]
EndFunc
Func _ImGui_ColorPicker($label, ByRef $color, $flags = $ImGuiColorEditFlags_None)
	Local $struct_v = DllStructCreate('uint value;')
	$struct_v.value = $color
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "ColorPicker", "wstr", $label, "ptr", DllStructGetPtr($struct_v), "int", $flags)
	If @error Then Return SetError(1, 0, 0)
	$color = $struct_v.value
	Return $result[0]
EndFunc

Func _ImGui_CollapsingHeaderEx($label, ByRef $p_open, $flags = $ImGuiTreeNodeFlags_None)
	Local $struct_p_open = DllStructCreate('boolean value;')
	$struct_p_open.value = $p_open
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "CollapsingHeaderEx", "wstr", $label, "ptr", DllStructGetPtr($struct_p_open), "int", $flags)
	If @error Then Return SetError(1, 0, 0)
	$p_open = $struct_p_open.value
	Return $result[0]
EndFunc
Func _ImGui_SetNextItemOpen($is_open, $cond = $ImGuiCond_None)
	DllCall($IMGUI_DLL, "none:cdecl", "SetNextItemOpen", "boolean", $is_open, "int", $cond)
EndFunc

Func _ImGui_ListBox($label, ByRef $current_item, $items, $height_items = -1)

	If Not IsArray($items) Then Return False
	$items_count = UBound($items)

	Local $struct_current_item = DllStructCreate('int value;')
	$struct_current_item.value = $current_item

	Local $struct_item_count = DllStructCreate('int value[' & $items_count + 1 & '];')
	DllStructSetData($struct_item_count, 1, $items_count, 1)

	Local $tag = ""
	for $i = 0 To $items_count - 1
		$len = StringLen($items[$i])
		$tag &= "wchar [" & $len + 1 & "];"
		DllStructSetData($struct_item_count, 1, $len + 1, $i + 2)
	Next

	Local $struct_item = DllStructCreate($tag)
	for $i = 0 To $items_count - 1
		DllStructSetData($struct_item, $i + 1, $items[$i])
	Next

	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "ListBox", "wstr", $label, "ptr", DllStructGetPtr($struct_current_item), "ptr", DllStructGetPtr($struct_item), "ptr", DllStructGetPtr($struct_item_count), "int", $height_items)

	If @error Then Return SetError(1, 0, 0)
	$current_item = $struct_current_item.value
	Return $result[0]
EndFunc

Func _ImGui_PlotLines($label, $values, $values_offset = 0, $overlay_text = "", $scale_min = $FLT_MAX, $scale_max = $FLT_MAX, $graph_size_x = 0, $graph_size_y = 0, $stride = 4)
	If IsArray($values) = False Then Return False

	Local $count = UBound($values)
	If $values_offset >= $count Then $values_offset = Mod($values_offset, $count)

	Local $struct_values = DllStructCreate('float values[' & $count & '];')
	for $i = 0 To $count - 1
		DllStructSetData($struct_values, 1, $values[$i], $i + 1)
	Next

	DllCall($IMGUI_DLL, "none:cdecl", "PlotLines", "wstr", $label, "ptr", DllStructGetPtr($struct_values), "int", _
	 $count, "int", $values_offset, "wstr", $overlay_text, "float", $scale_min, "float", $scale_max, _
	 "float", $graph_size_x, "float", $graph_size_y, "int", $stride)
	ToolTip(@error)
EndFunc
Func _ImGui_PlotHistogram($label, $values, $values_offset = 0, $overlay_text = "", $scale_min = $FLT_MAX, $scale_max = $FLT_MAX, $graph_size_x = 0, $graph_size_y = 0, $stride = 4)

	If IsArray($values) = False Then Return False

	Local $count = UBound($values)
	If $values_offset >= $count Then $values_offset = Mod($values_offset, $count)

	Local $struct_values = DllStructCreate('float values[' & $count & '];')
	for $i = 0 To $count - 1
		DllStructSetData($struct_values, 1, $values[$i], $i + 1)
	Next

	DllCall($IMGUI_DLL, "none:cdecl", "PlotHistogram", "wstr", $label, "ptr", DllStructGetPtr($struct_values), "int", $count, "int", $values_offset, "wstr", $overlay_text, "float", $scale_min, "float", $scale_max, "float", $graph_size_x, "float", $graph_size_y, "int", $stride)


EndFunc

Func _ImGui_MenuItemEx($label, $shortcut, ByRef $p_selected, $enabled = True)
	Local $struct_p_selected = DllStructCreate('boolean value;')
	$struct_p_selected.value = $p_selected
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "MenuItemEx", "wstr", $label, "wstr", $shortcut, "ptr", DllStructGetPtr($struct_p_selected), "boolean", $enabled)
	If @error Then Return SetError(1, 0, 0)
	$p_selected = $struct_p_selected.value
	Return $result[0]
EndFunc

Func _ImGui_BeginPopupModalEx($name, ByRef $p_open, $flags = $ImGuiWindowFlags_None)

	Local $struct_p_open = DllStructCreate('boolean value;')
	$struct_p_open.value = $p_open
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "BeginPopupModal", "wstr", $name, "ptr", DllStructGetPtr($struct_p_open), "int", $flags)

	If @error Then Return SetError(1, 0, 0)
	$p_open = $struct_p_open.value
	Return $result[0]
EndFunc

Func _ImGui_BeginTabItemEx($label, ByRef $p_open, $flags = $ImGuiTabItemFlags_None)
	Local $struct_p_open = DllStructCreate('boolean value;')
	$struct_p_open.value = $p_open
	Local $result = DllCall($IMGUI_DLL, "boolean:cdecl", "BeginTabItem", "wstr", $label, "ptr", DllStructGetPtr($struct_p_open), "int", $flags)
	If @error Then Return SetError(1, 0, 0)
	$p_open = $struct_p_open.value
	Return $result[0]
EndFunc

Func _ImGui_CalcTextSize($text, $hide_text_after_double_hash = false, $wrap_width = -1)

	Local $struct_x = DllStructCreate("float value;")
	Local $struct_y = DllStructCreate("float value;")

	Local $result = DllCall($IMGUI_DLL, "none:cdecl", "CalcTextSize", "wstr", $text, "boolean", $hide_text_after_double_hash, "float", $wrap_width, "ptr", DllStructGetPtr($struct_x), "ptr", DllStructGetPtr($struct_y))

	If @error Then Return SetError(1, 0, 0)
	Local $ret[2] = [$struct_x.value, $struct_y.value]

	Return $ret
EndFunc

Func _ImGui_GetMainViewport()
	local $result = DllCall($IMGUI_DLL, "ptr:cdecl", "GetMainViewport")
	If @error Then Return SetError(1, 0, 0)

	Local $struct = DllStructCreate($__tagImGuiViewport, $result[0])
	return $struct
EndFunc

; ================== ImDraw

Func _ImDraw_AddConvexPolyFilled($points, $col = 0xFFFFFFFF)
	If not IsArray($points) Then Return False

	Local $points_count = UBound($points)
	Local $tag = ""
	For $i = 0 To $points_count*2
		$tag &= "float;"
	Next

	Local $struct_points = DllStructCreate($tag)
	for $i = 0 To $points_count - 1
		DllStructSetData($struct_points, $i*2 + 1,  $points[$i][0])
		DllStructSetData($struct_points, $i*2+1 + 1, $points[$i][1])
	Next


	DllCall($IMGUI_DLL, "none:cdecl", "AddConvexPolyFilled", "ptr", $ImDrawList_ptr, "ptr", DllStructGetPtr($struct_points), "int", $points_count, "uint", $col)
EndFunc

Func _ImDraw_AddPolyline($points, $col = 0xFFFFFFFF, $closed = True, $thickness = 1)
	If not IsArray($points) Then Return False
	Local $points_count = UBound($points)
	Local $tag = ""
	For $i = 0 To $points_count*2
		$tag &= "float;"
	Next

	Local $struct_points = DllStructCreate($tag)
	for $i = 0 To $points_count - 1
		DllStructSetData($struct_points, $i*2 + 1,  $points[$i][0])
		DllStructSetData($struct_points, $i*2+1 + 1, $points[$i][1])
	Next
	DllCall($IMGUI_DLL, "none:cdecl", "AddPolyline", "ptr", $ImDrawList_ptr, "ptr", DllStructGetPtr($struct_points), "int", $points_count, "uint", $col, "boolean", $closed, "float", $thickness)
EndFunc

Func _ImGui_ImageGetSize($user_texture_id)
	If $user_texture_id = 0 Then Return SetError(1, 0, 0)

	Local $struct_x = DllStructCreate("float value;")
	Local $struct_y = DllStructCreate("float value;")
	Local $result = DllCall($IMGUI_DLL, "none:cdecl", "ImageGetSize", "ptr", $user_texture_id, "ptr", DllStructGetPtr($struct_x),"ptr", DllStructGetPtr($struct_y))
	If @error Then Return SetError(1, 0, 0)
	Local $ret[2] = [$struct_x.value, $struct_y.value]
	Return $ret
EndFunc